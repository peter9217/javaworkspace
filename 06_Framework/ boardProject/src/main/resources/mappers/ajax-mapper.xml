<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ajaxMapper">

	<resultMap type="Member" id="member_rm">
      <!-- DB의 기본 키(복합키면 여러 개 작성) -->
      <id property="memberNo" column="MEMBER_NO" />

      <!-- DB의 일반 컬럼들 -->
      <result property="memberEmail" column="MEMBER_EMAIL" />
      <result property="memberPw" column="MEMBER_PW" />
      <result property="memberNickname" column="MEMBER_NICKNAME" />
      <result property="memberTel" column="MEMBER_TEL" />
      <result property="memberAddress" column="MEMBER_ADDR" />
      <result property="profileImage" column="PROFILE_IMG" />
      <result property="enrollDate" column="ENROLL_DATE" />
      <result property="memberDeleteFlag" column="MEMBER_DEL_FL" />
      <result property="authority" column="AUTHORITY" />
   </resultMap>




	<select id="selectNickname" parameterType="string" resultType="string">
		SELECT MEMBER_NICKNAME
		FROM "MEMBER"
		WHERE MEMBER_EMAIL = #{email}
		AND MEMBER_DEL_FL = 'N'
	</select>
	
	<!-- parameterType="string" : 전달 받은 파라미터의 자료형 작성(선택사항) -->
	
	<select id="selectMemberTel" resultType="string">
		SELECT MEMBER_TEL
		FROM "MEMBER"
		WHERE MEMBER_NICKNAME = #{nickname}
		AND MEMBER_DEL_FL = 'N'
	</select>


	<!--  이메일 중복 검사-->	
	<select id="checkEmail" resultType="int">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE MEMBER_EMAIL = #{email}
		AND MEMBER_DEL_FL = 'N'
	</select>
	
	<!--  닉네임 중복 검사-->	
	<select id="checkNickname" resultType="int">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE MEMBER_NICKNAME = #{nickname}
		AND MEMBER_DEL_FL = 'N'
	</select>

	<!-- resultMap은 언제 사용? 
		조회 결과 컬럼명과 DTO의 필드명이 다를 때 사용
	-->
	<select id="selectMember" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_TEL, NVL(MEMBER_ADDR, '미작성') MEMBER_ADDR, ENROLL_DATE 
		FROM "MEMBER"
		WHERE MEMBER_EMAIL = #{email}
		AND MEMBER_DEL_FL = 'N'
	</select>
	
	
	<select id="selectMemberList" resultMap="member_rm">
	<!-- ${input}을 사용한 이유는 #{}으로 작성하면 '%' 값 '%' 형태로 SQL이 정상적인 형태가 아니게 되기 때문에 값을 감싸고 있는 '' 제거하기 위해서 -->
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME FROM "MEMBER" WHERE MEMBER_DEL_FL ='N' AND MEMBER_EMAIL LIKE '%${INPUT}%' ORDER BY MEMBER_NO
	</select>
	
	
	
</mapper>
